--DATA CLEANING
-- 1- Remove duplicates if any
--2. Standarize the Data 
--3. Null values or blank VALUES
--4. Remove any columns if necessary

--First, we create a new table to not interfer in the raw data 

CREATE TABLE layoffs
LIKE layoffs_original

SELECT *
FROM layoffs

INSERT layoffs
SELECT *
FROM layoffs_original

-- 1. Then, we begin with dupplicates

SELECT *,
ROW_NUMBER() OVER (
PARTITION BY company, location, industry, total_laid_off, percentage_laid_off, `date`, stage, country, funds_raised_millions) AS row_num
FROM layoffs


WITH duplicate_cte AS 
(
SELECT *,
ROW_NUMBER() OVER (
PARTITION BY company, location, industry, total_laid_off, percentage_laid_off, `date`, stage, country, funds_raised_millions) AS row_num
FROM layoffs
)

SELECT *
FROM duplicate_cte
WHERE row_num >1

CREATE TABLE "layoffs2" (
	"company"	TEXT,
	"location"	TEXT,
	"industry"	TEXT,
	"total_laid_off"	TEXT,
	"percentage_laid_off"	TEXT,
	"date"	TEXT,
	"stage"	TEXT,
	"country"	TEXT,
	"funds_raised_millions"	TEXT,
	"row_num" INT
)

SELECT *
FROM layoffs2

INSERT INTO layoffs2
SELECT *,
ROW_NUMBER() OVER (
PARTITION BY company, location, industry, total_laid_off, percentage_laid_off, `date`, stage, country, funds_raised_millions) AS row_num
FROM layoffs


SELECT *
FROM layoffs2
WHERE row_num >1

DELETE 
FROM layoffs2
WHERE row_num >1

SELECT *
FROM layoffs2

--2. Standardizing data: we look through each column, just in case some small issue exists

SELECT  company, TRIM(company)
FROM layoffs2

UPDATE layoffs2
SET company = TRIM(company)


SELECT  DISTINCT industry
FROM layoffs2

SELECT *
FROM layoffs2
WHERE industry LIKE 'Crypto%';

UPDATE layoffs2
SET industry = 'Crypto'
WHERE industry LIKE 'Crypto%';

SELECT DISTINCT country, 
RTRIM(country, '.') AS country_trimmed
FROM layoffs2
ORDER BY 1;

UPDATE layoffs2
SET country = RTRIM(country, '.')
WHERE country LIKE 'United States%';

SELECT*
FROM layoffs2


SELECT `date`,
STR_TO_DATE(`date`,'%d/%m/%Y')
FROM layoffs2

ALTER TABLE layoffs2 ADD COLUMN converted_date DATE;

UPDATE layoffs2
SET converted_date = date(
    SUBSTR(date, 7, 4) || '-' || SUBSTR(date, 4, 2) || '-' || SUBSTR(date, 1, 2)
);

-- 3. Nulls and Blanks

SELECT *
FROM layoffs2
WHERE total_laid_off IS NULL

SELECT*
FROM layoffs2 t1
JOIN layoffs2 t2
		ON t1.company = t2.company
WHERE (t1.industry IS NOT NULL OR t1.industry = ' ')
AND t2.industry IS NOT NULL

UPDATE layoffs2 AS t1
JOIN layoffs2 t2
		ON t1.company = t2.company
SET t1.industry = t2.industry
WHERE (t1.industry IS NOT NULL OR t1.industry = ' ')
AND t2.industry IS NOT NULL 

DELETE 
FROM layoffs2
WHERE total_laid_off is NULL	
and percentage_laid_off IS NULL

ALTER TABLE
DROP COLUMN row_num
